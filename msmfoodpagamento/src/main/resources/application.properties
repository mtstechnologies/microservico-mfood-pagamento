spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/mfood-pagamento?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.show-sql=true

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.application.name=pagamentos-ms
#o eureka escolhe a porta que o servico ira usar.
server.port=0
#para garantir host valido, como localhost, ou o IP/hostname correto da maquina.
eureka.instance.hostname=localhost
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${random.int}

#Significa que o circuit breaker ira considerar as ultimas 3 chamadas para determinar se deve abrir ou fechar o circuito.
resilience4j.circuitbreaker.instances.atualizaPedido.slidingWindowSize: 3
#E o numero minimo de chamadas que precisam falhar para que o circuit breaker abra.
#Neste caso, se pelo menos 2 das 3 ultimas chamadas falharem, o circuit breaker sera aberto.
resilience4j.circuitbreaker.instances.atualizaPedido.minimumNumberOfCalls: 2
#E o tempo que o circuit breaker permanecera aberto apos ser acionado.
#ele permanecera nessa posicao por 50 segundos, sem permitir novas chamadas.
resilience4j.circuitbreaker.instances.atualizaPedido.waitDurationInOpenState: 50s